[tool:pytest]
# Pytest configuration for Rover Mission Control Backend
minversion = 6.0
testpaths = backend/tests backend/hardware/tests backend/command_queue/tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async test support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    hardware: Hardware abstraction layer tests
    websocket: WebSocket communication tests
    api: API endpoint tests
    slow: Slow running tests
    performance: Performance tests
    load: Load tests
    mock: Tests requiring mocked dependencies
    database: Database integration tests
    auth: Authentication/authorization tests
    security: Security-related tests

# Test output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=backend
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-branch
    --cov-fail-under=80
    --durations=10
    --maxfail=5
    -ra

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Warnings configuration
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Test discovery
norecursedirs = .git .tox *.egg-info build dist