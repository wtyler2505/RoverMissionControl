name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'

jobs:
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Run type checking
      working-directory: ./frontend
      run: yarn run typecheck
    
    - name: Run linting
      working-directory: ./frontend
      run: yarn run lint
    
    - name: Run unit tests
      working-directory: ./frontend
      run: yarn run test:ci
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false
    
    - name: Generate test report
      working-directory: ./frontend
      if: always()
      run: |
        if [ -f coverage/lcov-report/index.html ]; then
          echo "Coverage report generated"
          ls -la coverage/
        fi
    
    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          frontend/coverage/
          frontend/test-results.xml
        retention-days: 30
    
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-node-${{ matrix.node-version }}
        path: frontend/coverage/
        retention-days: 30

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Build application
      working-directory: ./frontend
      run: yarn run build
      env:
        CI: true
        GENERATE_SOURCEMAP: false
    
    - name: Check bundle size
      working-directory: ./frontend
      run: |
        if [ -d build ]; then
          du -sh build/
          find build/static/js -name "*.js" -exec ls -lh {} \;
        fi
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: frontend/build/
        retention-days: 7

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: frontend/build/
    
    - name: Install axe-core CLI
      run: npm install -g @axe-core/cli
    
    - name: Serve built application
      working-directory: ./frontend
      run: |
        npx serve -s build -l 3000 &
        sleep 5
    
    - name: Run accessibility tests
      run: |
        axe http://localhost:3000 --exit
    
    - name: Archive accessibility results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-results
        path: axe-results.json
        retention-days: 30

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: frontend/build/
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
    
    - name: Serve built application
      working-directory: ./frontend
      run: |
        npx serve -s build -l 3000 &
        sleep 5
    
    - name: Run Lighthouse CI
      run: |
        lhci autorun --config=.lighthouserc.js
      env:
        LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
        LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
    
    - name: Archive Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
    
    - name: Run security audit
      working-directory: ./frontend
      run: yarn audit --level moderate
      continue-on-error: true
    
    - name: Run npm audit for detailed report
      working-directory: ./frontend
      run: |
        npm audit --audit-level moderate --json > audit-results.json
        cat audit-results.json
      continue-on-error: true
    
    - name: Archive audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-results
        path: frontend/audit-results.json
        retention-days: 30