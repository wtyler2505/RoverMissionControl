name: Simulation System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/hardware/simulation/**'
      - 'backend/routes/simulation_routes.py'
      - 'frontend/src/components/SimulationControl/**'
      - 'backend/tests/test_simulation_*.py'
      - 'frontend/src/components/SimulationControl/__tests__/**'
      - 'e2e/simulation-system.e2e.test.ts'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/hardware/simulation/**'
      - 'backend/routes/simulation_routes.py'
      - 'frontend/src/components/SimulationControl/**'

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Run backend tests
      run: |
        pytest backend/tests/test_simulation_system.py backend/tests/test_simulation_websocket.py \
          -v --cov=backend --cov-report=xml --cov-report=html --asyncio-mode=auto
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
    
    - name: Upload coverage HTML
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage-html
        path: htmlcov/

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false --ci
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
    
    - name: Upload coverage HTML
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage-html
        path: frontend/coverage/

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install Playwright
      run: |
        npx playwright install --with-deps
    
    - name: Start backend server
      run: |
        cd backend
        python server.py &
        sleep 10
    
    - name: Start frontend server
      run: |
        cd frontend
        npm start &
        sleep 10
    
    - name: Run E2E tests
      run: |
        npx playwright test e2e/simulation-system.e2e.test.ts --reporter=html
    
    - name: Upload E2E test report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-report
        path: playwright-report/
        retention-days: 30

  integration:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, e2e-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Run integration test script
      run: |
        python run_simulation_tests.py
    
    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test-report.json